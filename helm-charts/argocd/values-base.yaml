global:
  image:
    # -- If defined, a repository applied to all Argo CD deployments
    repository: inder1991/argocd-customized
    tag: "2.0.0"

argo-cd:    
  # This key configures Redis-HA subchart and when enabled (redis-ha.enabled=true)
  # the custom redis deployment is omitted
  # Check the redis-ha chart for more properties
  redis-ha:
    # -- Enables the Redis HA subchart and disables the custom Redis single node deployment
    enabled: false
    exporter:
      # -- If `true`, the prometheus exporter sidecar is enabled
      enabled: true

  ## Server
  server:
    # -- The number of server pods to run
    replicas: 2

    autoscaling:
      # -- Enable Horizontal Pod Autoscaler ([HPA]) for the Argo CD server
      enabled: true
      # -- Minimum number of replicas for the Argo CD server [HPA]
      minReplicas: 2

    ## Server metrics service configuration
    metrics:
      # -- Deploy metrics service
      enabled: true

      serviceMonitor:
        # -- Enable a prometheus ServiceMonitor
        enabled: true

    # -- Manage Argo CD configmap (Declarative Setup)
    ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cm.yaml
    configEnabled: true

    additionalProjects: 
    - name: argocd
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      description: Argocd Project
      sourceRepos:
      - '*'
      destinations:
      - namespace: argocd
        server: https://kubernetes.default.svc
      clusterResourceWhitelist:
      - group: '*'
        kind: '*'
      orphanedResources:
        warn: false            

  ## Repo Server
  repoServer:

    # -- The number of repo server pods to run
    replicas: 2
    rbac:
      - verbs:
          - get
          - list
          - watch
        apiGroups:
          - ''
        resources:
          - secrets
          - configmaps
    autoscaling:
      # -- Enable Horizontal Pod Autoscaler ([HPA]) for the repo server
      enabled: true
      # -- Minimum number of replicas for the repo server [HPA]
      minReplicas: 2    

    ## Repo server metrics service configuration
    metrics:
      # -- Deploy metrics service
      enabled: true   
      serviceMonitor:
        # -- Enable a prometheus ServiceMonitor
        enabled: true 

    ## Enable Admin ClusterRole resources.
    ## Enable if you would like to grant cluster rights to Argo CD repo server.
    clusterAdminAccess:
      # -- Enable RBAC for local cluster deployments
      enabled: true

    initContainers:
    - name: download-tools
      image: docker.io/inder1991/argocd-vault-plugin:2.0.0
      env:
        - name: AVP_VERSION
          value: 1.11.0
      command: [sh, -c]
      args:
        - >-
          chmod +x argocd-vault-plugin &&
          mv argocd-vault-plugin /custom-tools/
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
    extraContainers:
    - name: avp-helm
      command: [/var/run/argocd/argocd-cmp-server]
      image: quay.io/argoproj/argocd:v2.4.8
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: tmp-dir
        - mountPath: /home/argocd/cmp-server/config
          name: cmp-plugin
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin
    volumes:
    - configMap:
        name: cmp-plugin
      name: cmp-plugin
    - name: custom-tools
      emptyDir: {}
    - name: tmp-dir
      emptyDir: {}
    clusterRoleRules:
      # -- Enable custom rules for the Repo server's Cluster Role resource
      enabled: true
      # -- List of custom rules for the Repo server's Cluster Role resource
      rules: 
      - verbs:
          - create
        apiGroups:
          - authentication.k8s.io
        resources:
          - tokenreviews
      - verbs:
          - create
        apiGroups:
          - authorization.k8s.io
        resources:
          - subjectaccessreviews  

  # ## Argo Configs
  # configs:
  #   credentialTemplates: 
  #     github-ssh-creds:
  #      url: <url>
  #      sshPrivateKey: <sshPrivateKey>

  applicationSet:
    # -- Enable Application Set controller
    enabled: false
